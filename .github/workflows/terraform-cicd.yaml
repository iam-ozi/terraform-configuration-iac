name: Terraform CI/CD

on:
  push:
    branches:
      - dev  # Runs on any branch push
      - vpc-name-roolback
    paths:
      - '**/terraform.tfvars'
  pull_request:
    branches:
      - main
    types: [closed]  # Triggers when a PR is closed (merged)

jobs:
  terraform:
    name: Terraform Plan or Apply
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ['./vpc', './security-groups']  # Directories to target for Terraform provisioning

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        working-directory: ${{ matrix.directory }}
        run: terraform init

      - name: Terraform Plan
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)
        working-directory: ${{ matrix.directory }}
        run: terraform plan -out=plan.tfplan

      - name: Terraform Apply
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
        working-directory: ${{ matrix.directory }}
        run: terraform apply -auto-approve
