name: Terraform CI/CD

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:
  terraform:
    name: Terraform Plan and Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest  # Set the version you want to use

      - name: Terraform Init
        working-directory: ./vpc
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        working-directory: ./vpc
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform plan -out=tfplan

      - name: Verify tfplan file
        if: github.event_name == 'pull_request'
        working-directory: ./vpc
        run: ls -l tfplan  

      - name: Upload Plam
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: ./vpc/tfplan
    manual_approval:
      name: Wait for Approval and Apply
      runs-on: ubuntu-latest
      needs: terraform
      if: github.event_name == 'pull_request' && github.event.pull_request.merged == true

    steps:

      - name: Download Plan
        if: github.event_name == 'push'
        uses: actions/download-artifact@v3
        with:
          name: tfplan
          path: ./vpc

      - name: Terraform Apply (requires PR approval)
        if: github.event_name == 'push'
        working-directory: ./vpc
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply tfplan
